!
!     file comf.f
!
!
!  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
!  .                                                             .
!  .                  copyright (c) 2004 by UCAR                 .
!  .                                                             .
!  .       UNIVERSITY CORPORATION for ATMOSPHERIC RESEARCH       .
!  .                                                             .
!  .                      all rights reserved                    .
!  .                                                             .
!  .                                                             .
!  .                      FISHPACK version 5.0                   .
!  .                                                             .
!  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
!
!     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
!     *                                                               *
!     *                        F I S H P A C K                        *
!     *                                                               *
!     *                                                               *
!     *     A PACKAGE OF FORTRAN SUBPROGRAMS FOR THE SOLUTION OF      *
!     *                                                               *
!     *      SEPARABLE ELLIPTIC PARTIAL DIFFERENTIAL EQUATIONS        *
!     *                                                               *
!     *                  (Version 5.0 , JUNE 2004)                    *
!     *                                                               *
!     *                             BY                                *
!     *                                                               *
!     *        JOHN ADAMS, PAUL SWARZTRAUBER AND ROLAND SWEET         *
!     *                                                               *
!     *                             OF                                *
!     *                                                               *
!     *         THE NATIONAL CENTER FOR ATMOSPHERIC RESEARCH          *
!     *                                                               *
!     *                BOULDER, COLORADO  (80307)  U.S.A.             *
!     *                                                               *
!     *                   WHICH IS SPONSORED BY                       *
!     *                                                               *
!     *              THE NATIONAL SCIENCE FOUNDATION                  *
!     *                                                               *
!     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
!
!
! PACKAGE COMF           THE ENTRIES IN THIS PACKAGE ARE LOWLEVEL
!                        ENTRIES, SUPPORTING FISHPACK ENTRIES BLKTRI
!                        AND CBLKTRI. THAT IS, THESE ROUTINES ARE
!                        NOT CALLED DIRECTLY BY USERS, BUT RATHER
!                        BY ENTRIES WITHIN BLKTRI AND CBLKTRI.
!                        DESCRIPTION OF ENTRIES EPMACH AND PIMACH
!                        FOLLOW BELOW.
!
! LATEST REVISION        JUNE 2004
!
! SPECIAL CONDITIONS     NONE
!
! I/O                    NONE
!
! PRECISION              SINGLE
!
! REQUIRED LIBRARY       NONE
! FILES
!
! LANGUAGE               FORTRAN 90
! ********************************************************************
!
! FUNCTION EPMACH (DUM)
!
! PURPOSE                TO COMPUTE AN APPROXIMATE MACHINE ACCURACY
!                        EPSILON ACCORDING TO THE FOLLOWING DEFINITION:
!                        EPSILON IS THE SMALLEST NUMBER SUCH THAT
!                        (1.+EPSILON).GT.1.)
!
! USAGE                  EPS = EPMACH (DUM)
!
! ARGUMENTS
! ON INPUT               DUM
!                          DUMMY VALUE
!
! ARGUMENTS
! ON OUTPUT              NONE
!
! HISTORY                THE ORIGINAL VERSION, WRITTEN WHEN THE
!                        BLKTRI PACKAGE WAS CONVERTED FROM THE
!                        CDC 7600 TO RUN ON THE CRAY-1, CALCULATED
!                        MACHINE ACCURACY BY SUCCESSIVE DIVISIONS
!                        BY 10.  USE OF THIS CONSTANT CAUSED BLKTRI
!                        TO COMPUTE SOLUTIONS ON THE CRAY-1 WITH FOUR
!                        FEWER PLACES OF ACCURACY THAN THE VERSION
!                        ON THE 7600.  IT WAS FOUND THAT COMPUTING
!                        MACHINE ACCURACY BY SUCCESSIVE DIVISIONS
!                        OF 2 PRODUCED A MACHINE ACCURACY 29% LESS
!                        THAN THE VALUE GENERATED BY SUCCESSIVE
!                        DIVISIONS BY 10, AND THAT USE OF THIS
!                        MACHINE CONSTANT IN THE BLKTRI PACKAGE
!                        RECOVERED THE ACCURACY THAT APPEARED TO
!                        BE LOST ON CONVERSION.
!
! ALGORITHM              COMPUTES MACHINE ACCURACY BY SUCCESSIVE
!                        DIVISIONS OF TWO.
!
! PORTABILITY            THIS CODE WILL EXECUTE ON MACHINES OTHER
!                        THAN THE CRAY1, BUT THE RETURNED VALUE MAY
!                        BE UNSATISFACTORY.  SEE HISTORY ABOVE.
! ********************************************************************
!
! FUNCTION PIMACH (DUM)
!
! PURPOSE                TO SUPPLY THE VALUE OF THE CONSTANT PI
!                        CORRECT TO MACHINE PRECISION WHERE
!                        PI=3.141592653589793238462643383279502884197
!                             1693993751058209749446
!
! USAGE                  PI = PIMACH (DUM)
!
! ARGUMENTS
! ON INPUT               DUM
!                          DUMMY VALUE
!
! ARGUMENTS
! ON OUTPUT              NONE
!
! ALGORITHM              THE VALUE OF PI IS SET TO 4.*ATAN(1.0)
!
! PORTABILITY            THIS ENTRY IS PORTABLE, BUT USERS SHOULD
!                        CHECK TO SEE WHETHER GREATER ACCURACY IS
!                        REQUIRED.
!
!***********************************************************************
      REAL FUNCTION EPMACH (DUM) 
      IMPLICIT NONE
      SAVE ALL
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      REAL  :: DUM 
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      REAL :: ALL, EPS,V
      COMMON /VALUE/  V                                                 
      EPS = 1. 
      EPS = EPS/2. 
      CALL STRWRD (EPS + 1.) 
      DO WHILE(V - 1. > 0.) 
         EPS = EPS/2. 
         CALL STRWRD (EPS + 1.) 
      END DO 
      EPMACH = 100.*EPS 
      RETURN  
      END FUNCTION EPMACH 


      SUBROUTINE STRWRD(X) 
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      REAL , INTENT(IN) :: X 
!-----------------------------------------------
!   C o m m o n   B l o c k s
!-----------------------------------------------
!...  /VALUE/ 
      COMMON /VALUE/ V 
      REAL   V 
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      REAL :: ALL 

      SAVE ALL 
!-----------------------------------------------
      V = X 
      RETURN  
      END SUBROUTINE STRWRD 


      REAL FUNCTION PIMACH (DUM) 
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      REAL  :: DUM 
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
!-----------------------------------------------
!     PI=3.1415926535897932384626433832795028841971693993751058209749446
!
      PIMACH = 4.*ATAN(1.0) 
      RETURN  
      END FUNCTION PIMACH 


      REAL FUNCTION PPSGF (X, IZ, C, A, BH) 
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      INTEGER , INTENT(IN) :: IZ 
      REAL , INTENT(IN) :: X 
      REAL  :: C(*) 
      REAL  :: A(*) 
      REAL , INTENT(IN) :: BH(*) 
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      INTEGER :: J 
      REAL :: ALL, SUM 

      SAVE ALL 
!-----------------------------------------------
      SUM = 0. 
      DO J = 1, IZ 
         SUM = SUM - 1./(X - BH(J))**2 
      END DO 
      PPSGF = SUM 
      RETURN  
      END FUNCTION PPSGF 


      REAL FUNCTION PPSPF (X, IZ, C, A, BH) 
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      INTEGER , INTENT(IN) :: IZ 
      REAL , INTENT(IN) :: X 
      REAL  :: C(*) 
      REAL  :: A(*) 
      REAL , INTENT(IN) :: BH(*) 
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      INTEGER :: J 
      REAL :: ALL, SUM 

      SAVE ALL 
!-----------------------------------------------
      SUM = 0. 
      DO J = 1, IZ 
         SUM = SUM + 1./(X - BH(J)) 
      END DO 
      PPSPF = SUM 
      RETURN  
      END FUNCTION PPSPF 


      REAL FUNCTION PSGF (X, IZ, C, A, BH) 
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      INTEGER , INTENT(IN) :: IZ 
      REAL , INTENT(IN) :: X 
      REAL , INTENT(IN) :: C(*) 
      REAL , INTENT(IN) :: A(*) 
      REAL , INTENT(IN) :: BH(*) 
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      INTEGER :: J 
      REAL :: ALL, FSG, HSG, DD 

      SAVE ALL 
!-----------------------------------------------
      FSG = 1. 
      HSG = 1. 
      DO J = 1, IZ 
         DD = 1./(X - BH(J)) 
         FSG = FSG*A(J)*DD 
         HSG = HSG*C(J)*DD 
      END DO 
      IF (MOD(IZ,2) == 0) THEN 
         PSGF = 1. - FSG - HSG 
         RETURN  
      ENDIF 
      PSGF = 1. + FSG + HSG 
      RETURN  
!
! REVISION HISTORY---
!
! SEPTEMBER 1973    VERSION 1
! APRIL     1976    VERSION 2
! JANUARY   1978    VERSION 3
! DECEMBER  1979    VERSION 3.1
! FEBRUARY  1985    DOCUMENTATION UPGRADE
! NOVEMBER  1988    VERSION 3.2, FORTRAN 77 CHANGES
! June      2004    Version 5.0, Fortran 90 changes
!-----------------------------------------------------------------------
      END FUNCTION PSGF 
