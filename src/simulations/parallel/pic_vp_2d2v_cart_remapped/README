# 
# simulation_4d_vp_generic_pic_cartesian simulation
# 
# ======================================================================
# MCP and ALH
# ======================================================================
#+STARTUP: showeverything
# ======================================================================
# [[shell:header\alh 'README']] (cf [[file:~/alh/bin/headeralh]])
# emacs-keywords authors="MCP and ALH" brief="simulation_4d_vp_generic_pic_cartesian simulation" default=0 org start=26/10/15

* Directory structure

  test_4d_vp_generic_pic_cartesian      -- executable
  params_generic_pic_4d.nml             -- input file
  README                                -- info (this file)
  run/                                  -- output directory

* HOWTO
** Source location
   file:sll_m_sim_pic_vp_2d2v_cart_remapped.F90
   file:sim_pic_vp_2d2v_cart_remapped.F90
	
** Doxygen
  building: [[elisp:(compile "cd ${SELALIB}/build && make doc")]]
  HTML index: [[selalib:doc/build/html/doxygen/html/index.html]]

** Configuring
*** extra packages

    binutils is for gprof, linux-tools is for perf
    [[elisp:(compile "sudo apt-get install -y libopenmpi-dev libfftw3-dev liblapack-dev libhdf5-mpi-dev binutils linux-tools")]]
    
*** configuration options

    The current configuration is cached in selalib:build/CMakeCache.txt

    some configuration options are required for [[file:../CMakeLists.txt]] to build parallel tests
    OPENMP_ENABLED=OFF is forced to OFF until further speed tests

    [[shell:rm -rf ~/selalib/build]]
    [[shell:mkdir -p ~/selalib/build]]

    - Debug mode:

      [[elisp:(compile "cd ${SELALIB}/build && cmake -DCMAKE_BUILD_TYPE=Debug -DHDF5_PARALLEL_ENABLED=ON -DCMAKE_VERBOSE_MAKEFILE=TRUE -DOPENMP_ENABLED=OFF ../../selalib" t)]]

    - Release mode:

      [[elisp:(compile "cd ${SELALIB}/build && cmake -DCMAKE_BUILD_TYPE=Release -DHDF5_PARALLEL_ENABLED=ON -DCMAKE_VERBOSE_MAKEFILE=FALSE -DOPENMP_ENABLED=OFF ../../selalib" t)]]

    - Shaking cmake enough to make it check the whole configuration from scratch again:
      remove selalib:build/CMakeCache.txt
	
** Compiling
   - sequential compile, no install (useful to see compiling errors):
     [[elisp:(compile "cd ${SELALIB}/build && make install")]]

   - parallel compile + install:
     [[elisp:(compile "cd ${SELALIB}/build && make -j $NCPU install")]]

** Running
*** setup
**** Create output directory

     [[elisp:(compile "mkdir -p ~/selalib/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run")]]

**** View [[selalib:usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped]] contents

     [[elisp:(startup-persistent-process "rox-filer ~/selalib/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped")]]

**** Parameters file

     git copy: file:params_generic_pic_4d.nml
     usr copy: 
*** Run
**** within [[selalib:usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped]] directory

     (NB: mpirun is not required at the moment)

     [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && ../test_pic_vp_2d2v_cart_remapped ../params_generic_pic_4d.nml")]]

**** complete make install + run

     [[elisp:(compile "cd ${SELALIB}/build && make -j $NCPU install && cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && ../test_pic_vp_2d2v_cart_remapped ../params_generic_pic_4d.nml")]]

*** plot
**** rho_init
***** Generated by [[file:simulation_pic_vp_2d2v_cart_remapped.F90::rho_init_standPUSH]]
***** Gnuplot script [[selalib:usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run/rho_init_standPUSH.gnu]]
      (generated by [[file:simulation_pic_vp_2d2v_cart_remapped.F90::rho_init_standPUSH]]).
***** Display [[shell:cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && gnuplot rho_init_standPUSH.gnu --persist]]
**** Ex, Ey
***** Generated by [[file:simulation_pic_vp_2d2v_cart_remapped.F90::Ex_Ey_output]]
***** Gnuplot scripts
      [[file:~/selalib/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run/Ex.gnu]]
      [[file:~/selalib/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run/Ey.gnu]]
***** Display

      [[shell:cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && gnuplot Ex.gnu --persist]]

      [[shell:cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && gnuplot Ey.gnu --persist]]

      AAA-ALH-HERE How to display evolution?

**** Autres graphes
-- pour representer les points reconstruits ou bien les points de f_target dont la vitesse est donnee

vx = 3
vy = 0

splot 'target_values_test_init4D.dat' u 1:2:(abs(($3)-vx)<0.01 && abs(($4)-vy)<0.01 ? $6 : 1/0) w p, '' u 1:2:(abs(($3)-vx)<0.01 && abs(($4)-vy)<0.01 ? $5 : 1/0) w p lc "blue"

** <<Debugging>>

     [[elisp:(gdb "gdb -i=mi -cd=~/selalib/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run --args $HOME/selalib/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/test_pic_vp_2d2v_cart_remapped ../params_debug.nml")]]

** Results

   - gnuplot prompt

     [[elisp:(startup-persistent-process "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && terminator -x gnuplot")]]

   - gnuplot script generated at runtime

     [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && gnuplot --persist rho_init_standPUSH.gnu")]]

** <<Profiling>>
*** with gprof

   - configure

     [[elisp:(compile "cd ${SELALIB}/build && cmake -DCMAKE_BUILD_TYPE=Debug -DHDF5_PARALLEL_ENABLED=ON
     -DCMAKE_VERBOSE_MAKEFILE=TRUE -DOPENMP_ENABLED=OFF -DCMAKE_Fortran_FLAGS='-pg -fprofile-arcs -ftest-coverage' ../../selalib")]]

   - run

     [[elisp:(compile "cd ${SELALIB}/build && make -j $NCPU install && cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && ../test_pic_vp_2d2v_cart_remapped ../params_generic_pic_4d.nml|tee output.txt")]]

   - results in selalib:usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run

   - Generate profiling reports with [[man:gprof]] (See also [[http://www.thegeekstuff.com/2012/08/gprof-tutorial/]])

     [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && gprof ../test_pic_vp_2d2v_cart_remapped gmon.out > func_profile.txt")]]

     [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && gprof -l ../test_pic_vp_2d2v_cart_remapped gmon.out > line_profile.txt")]]

*** with perf

    from the "linux-tools" package under Debian
    more on perf profiling: [[https://perf.wiki.kernel.org/index.php/Tutorial]]

**** configure

     -ggdb option is required to see source lines in the perf annotate output

     [[elisp:(compile "cd ${SELALIB}/build && cmake -DCMAKE_BUILD_TYPE=Release -DHDF5_PARALLEL_ENABLED=ON -DCMAKE_VERBOSE_MAKEFILE=TRUE -DOPENMP_ENABLED=OFF -DCMAKE_Fortran_FLAGS='-ggdb' ../../selalib")]]

**** compile

     [[elisp:(compile "cd ${SELALIB}/build && make -j $NCPU install")]]

**** run
***** basic

     - main run directory: selalib:usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run/

     - input data file for profiling: file:params_perf.nml

     - plain run for timing reference (instrumented runs should not be more than 5% slower than this)

       [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && ../test_pic_vp_2d2v_cart_remapped ../params_perf.nml | tee perf_ref_`date +%y%m%d%H%M`.txt")]]

     - basic stats ([[man:perf-stat]])

       [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && perf stat -d --log-fd 1 ../test_pic_vp_2d2v_cart_remapped ../params_perf.nml | tee perf_stat_`date +%y%m%d%H%M`.txt")]]

     - other valuable counters that may be worth testing

     perf stat -B -e cache-references,cache-misses,cycles,instructions,branches,faults,migrations ../test_pic_vp_2d2v_cart_remapped ../params_generic_pic_4d.nml

***** instrumented

      Statistics are recorded in binary form in run/perf.data ([[man:perf-record]]). The sampling value of 100000 is chosen
      according to [[http://sandsoftwaresound.net/perf/perf-tut-profile-hw-events/]]. "-o" is required to prevent perf from
      sending binary data into the output pipe

      - cpu-cycles

        [[elisp:(compile "STAMP=`date +%y%m%d%H%M` && cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && perf record -e cpu-cycles -c 100000 -o perf.data ../test_pic_vp_2d2v_cart_remapped ../params_perf.nml | tee perf_cpu_$STAMP.txt && cp perf.data perf_cpu_$STAMP.data")]]

      - stalled-cycles-frontend

        [[elisp:(compile "STAMP=`date +%y%m%d%H%M` && cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && perf record -e stalled-cycles-frontend -c 100000 -o perf.data ../test_pic_vp_2d2v_cart_remapped ../params_perf.nml | tee perf_stall_$STAMP.txt && cp perf.data perf_stall_$STAMP.data")]]

**** report
***** whole code with file:perf_report

     [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/pic_vp_2d2v_cart_remapped/run && ~/selalib/src/simulations/sim_parallel/sim_4d_vlasov_poisson_LTPIC_cartesian/perf_report")]]

***** annotating source code with file:perf_annotate
****** [[selalib:src/pic_utilities/lt_pic_4d_utilities.F90::sll_lt_pic_4d_write_f_on_grid_or_deposit][sll_lt_pic_4d_write_f_on_grid_or_deposit]]

       [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/4d_vp_lt_pic_cartesian/run && ~/selalib/src/simulations/sim_parallel/sim_4d_vlasov_poisson_LTPIC_cartesian/perf_annotate __sll_lt_pic_4d_utilities_MOD_sll_lt_pic_4d_write_f_on_grid_or_deposit")]]

****** [[selalib:src/pic_utilities/sll_representation_conversion.F90::cell_offset_to_global_extended][cell_offset_to_global_extended]]

       [[elisp:(compile "cd ${SELALIB}/usr/simulations/sim_parallel/4d_vp_lt_pic_cartesian/run && ~/selalib/src/simulations/sim_parallel/sim_4d_vlasov_poisson_LTPIC_cartesian/perf_annotate __sll_representation_conversion_module_MOD_cell_offset_to_global_extended")]]

** Selalib Ctests check

   [[elisp:(compile "cd ${SELALIB}/build && ctest -R pic_vp_2d2v_cart_remapped")]]

** clean

   [[elisp:(compile "cd ${SELALIB}/build && make clean")]]

* <<File_info>>

# Local Variables:
# mode:org
# mode:visual-line
# ispell-local-dictionary:"british"
# coding:utf-8
# eval:(flyspell-prog-mode)
# eval:(outline-minor-mode)
# End:
# LocalWords: emacs
