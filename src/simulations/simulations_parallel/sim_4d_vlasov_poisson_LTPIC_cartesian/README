# 
# 4d_vp_lt_pic_cartesian simulation
# 
# ======================================================================
# MCP and ALH
# ======================================================================
#+STARTUP: showeverything
# ======================================================================
# headeralh authors="MCP and ALH" brief="4d_vp_lt_pic_cartesian simulation" default=0 org

* Directory structure

  (Same directory structure as [[file:../sim_4d_vlasov_poisson_PIC_cartesian]])

  test_4d_vp_lt_pic_cartesian   -- executable
  params_lt_pic_4d.nml          -- input file
  README                        -- info (this file)
  run/                          -- output directory

* HOWTO
** Source location
   [[file:simulation_4d_vp_lt_pic_cartesian.F90]]
   file:unit_test_4d_vp_lt_pic_cartesian.F90
	
** Parameter file
   file:params_lt_pic_4d.nml
   file:~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/params_lt_pic_4d.nml

** Configuring
*** extra packages

   binutils is for gprof, linux-tools is for perf
     [[elisp:(compile "sudo apt-get install -y libopenmpi-dev libfftw3-dev liblapack-dev libhdf5-mpi-dev binutils linux-tools")]]
    
*** configuration options


     some configuration options are required for [[file:../CMakeLists.txt]] to build parallel tests
     OPENMP_ENABLED=OFF is forced to OFF until further speed tests

     [[shell:mkdir -p ~/selalib/build]]

   - Debug mode:

     [[elisp:(compile "cd ~/selalib/build && cmake -DCMAKE_BUILD_TYPE=Debug -DHDF5_PARALLEL_ENABLED=ON -DCMAKE_VERBOSE_MAKEFILE=TRUE -DOPENMP_ENABLED=OFF ../src")]]

   - Release mode:

     [[elisp:(compile "cd ~/selalib/build && cmake -DCMAKE_BUILD_TYPE=Release -DHDF5_PARALLEL_ENABLED=ON -DCMAKE_VERBOSE_MAKEFILE=FALSE -DOPENMP_ENABLED=OFF ../src")]]

   - Shaking cmake enough to make it check the whole configuration from scratch again:
     remove file:~/selalib/build/CMakeCache.txt
	
** Compiling
     [[elisp:(compile "cd ~/selalib/build && make -j $NCPU install")]]

** Running
   - Create output directory if missing

     [[elisp:(compile "mkdir -p ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run")]]

   - Run simulation within directory (NB: mpirun is not required at the moment)
     file:params_lt_pic_4d.nml
     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml")]]

   - complete make install + run in [[file:~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run]]

     [[elisp:(compile "cd ~/selalib/build && make -j $NCPU install && cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml")]]

** Debugging

   - using gdb ([[http://linux.die.net/man/1/gdb]]):
     cd SELALIB/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run
     gdb --args $HOME/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/test_4d_vp_lt_pic_cartesian $HOME/tmp/params_no_ok.nml")]]


   - (9/4/15 debug)

     OK: [[elisp:(compile "cd ~/selalib/build && make -j $NCPU install && cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && ../test_4d_vp_lt_pic_cartesian ~/desk/tmp/mcp/150409/params_ok.nml")]]

     KO: [[elisp:(compile "cd ~/selalib/build && make -j $NCPU install && cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && ../test_4d_vp_lt_pic_cartesian ~/tmp/params_no_ok.nml")]]

     gdb ([[http://linux.die.net/man/1/gdb]]): [[elisp:(gdb "gdb -i=mi -cd=~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run --args $HOME/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/test_4d_vp_lt_pic_cartesian $HOME/tmp/params_no_ok.nml")]]

   - for later mpi runs: mpirun -np 4 ../test_4d_vp_lt_pic_cartesian ../params_pic_4d.nml

** Results
   - Run gnuplot script generated at runtime
     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && gnuplot --persist rho_init_standPUSH.gnu")]]

** Profiling
*** gprof
   - configure
     [[elisp:(compile "cd ~/selalib/build && cmake -DCMAKE_BUILD_TYPE=Debug -DHDF5_PARALLEL_ENABLED=ON
     -DCMAKE_VERBOSE_MAKEFILE=TRUE -DOPENMP_ENABLED=OFF -DCMAKE_Fortran_FLAGS='-pg -fprofile-arcs -ftest-coverage' ../src")]]

   - run
     [[elisp:(compile "cd ~/selalib/build && make -j $NCPU install && cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml|tee output.txt")]]

   - results in file:~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run

   - Generate profiling reports with [[man:gprof]] (See also [[http://www.thegeekstuff.com/2012/08/gprof-tutorial/]])
     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && gprof ../test_4d_vp_lt_pic_cartesian gmon.out > func_profile.txt")]]
     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && gprof -l ../test_4d_vp_lt_pic_cartesian gmon.out > line_profile.txt")]]

*** perf

    from the linux-tools package under Debian

    more on perf profiling: [[https://perf.wiki.kernel.org/index.php/Tutorial]]

**** configure

     -ggdb option is required to see source lines in the perf annotate output

     [[elisp:(compile "cd ~/selalib/build && cmake -DCMAKE_BUILD_TYPE=Release -DHDF5_PARALLEL_ENABLED=ON -DCMAKE_VERBOSE_MAKEFILE=TRUE -DOPENMP_ENABLED=OFF -DCMAKE_Fortran_FLAGS='-ggdb' ../src")]]

**** compile: [[elisp:(compile "cd ~/selalib/build && make -j $NCPU install")]]

**** run (stores data in binary form in file perf.data):

     - main run directory: file:~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/

     - the input data is in [[file:~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/params_lt_pic_4d.nml][params_lt_pic_4d.nml]]

     - plain run for timing reference (instrumented runs should be 5% slower than this)

     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml")]]

     - basic stats

     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && perf stat -d ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml")]]

     - instrumented run (generates statistics in binary form in run/perf.data). Sampling value of 100000 chosen
       according to [[http://sandsoftwaresound.net/perf/perf-tut-profile-hw-events/]]

     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && perf record -e
     cpu-cycles -c 100000 ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml")]]

     [[elisp:(compile "cd ~/selalib/usr/simulations/simulations_parallel/4d_vp_lt_pic_cartesian/run && perf record -e
     stalled-cycles-frontend -c 100000 ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml")]]

**** reporting

     perf stat -B -e cache-references,cache-misses,cycles,instructions,branches,faults,migrations ../test_4d_vp_lt_pic_cartesian ../params_lt_pic_4d.nml

** Ctests
   [[elisp:(compile "cd ~/selalib/build && ctest -R 4d_vp_lt_pic_cartesian")]]

** clean
   [[elisp:(compile "cd ~/selalib/build && make clean")]]


* <<File_info>>
# Local Variables:
# mode:org
# mode:visual-line
# ispell-local-dictionary:"british"
# coding:utf-8
# End:
