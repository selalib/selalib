#!/usr/bin/perl
#
# filter for perf annotate output
#
# ======================================================================
# Written by Antoine Le Hyaric
# http://www.ljll.math.upmc.fr/lehyaric
# ======================================================================
# [[shell:header\alh 'perf_annotate']] [[file:~/alh/bin/headeralh]]
# headeralh brief="filter for perf annotate output" default=0 perl start=10/04/2015 written

use strict;
use warnings;

# analyse object given as argument
my ($object)=@ARGV;

# find latest data file to get its tag
my $latest=`ls -1t perf_*.data|head -1`;
$latest=~/perf_(.*)\.data$/ or die;
my $tag=$1;

# create report with same tag
open REPORT,"> annotate_$tag.txt" or die;

foreach my $object(@ARGV){

  print REPORT "perf_annotate $object\n\n";

  # [[man:perf-annotate]] applied on default perf.data
  open PERF,"perf annotate -s $object --stdio|" or die;
  my $total=0;
  my @biggest;
  foreach(<PERF>){

    # remove lines of assembler that only account for 0%
    next if /^\h+(0\.00)\h:\h+[0-9a-z]+:/;

    # stats
    if(/^\h+([0-9.]+)\h:/){push @biggest,$1;$total+=$1}

    print REPORT $_;
  }
  close PERF;

  @biggest=sort{$b<=>$a}@biggest;
  splice(@biggest,10,$#biggest-9);
  print REPORT "perf_annotate: biggest = ".join(", ",@biggest),"\n";
  print REPORT "perf_annotate: total = $total%\n";
}

close REPORT;

# Local Variables:
# mode:cperl
# ispell-local-dictionary:"british"
# coding:utf-8
# End:
