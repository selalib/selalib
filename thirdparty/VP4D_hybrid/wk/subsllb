#!/usr/bin/env bash

arg=$#
DATANAME=$1

# Create name for the result directory associated 
#   to the name of the DATA_filename
#-----------------------------------------------------------------
casename_tmp=`basename $DATANAME | tr '[:lower:]' '[:upper:]'`
CASENAME=`echo $casename_tmp | tr -s '.' ' ' | awk '{print $1}' `
MACHNAME=`echo $ARCH | tr '[:lower:]' '[:upper:]'`
FIRSTCAR=${MACHNAME:0:1}
CASE=D${FIRSTCAR}_${CASENAME}

DIRNAME=$(dirname $PWD)
HOMEDIR=$DIRNAME
SLLBDIR=$(basename $(dirname $HOMEDIR))
go_file_cmd="go_"${DATANAME}".cmd"

# Batch control
#-----------------------------------------------------------------
MPIPROCS=`grep MPIPROCS $DATANAME | head -n 1 | tr -s '=' ' ' |  awk '{print $2}'`
NNODES=`grep NNODES $DATANAME | head -n 1 | tr -s '=' ' ' |  awk '{print $2}'`
NTHREAD=`grep NTHREAD $DATANAME | head -n 1 | tr -s '=' ' ' |  awk '{print $2}'`
TIMEH=$(grep TIME $DATANAME | head -n 1 | sed -n 's/.*[^0-9]\([0-9]*[0-9]:[0-9][0-9]:[0-9][0-9]\).*/\1/p')
TIME=$(echo $TIMEH |awk -F: '{print 3600*$1+60*$2+$3}')
JOBNAME=`grep JOBNAME $DATANAME  | head -n 1 | tr -s '=' ' ' |  awk '{print $2}'`  

# According to ARCH variable
# --------------------------
case ${ARCH} in

# POINCARE
#-----------------------------------------------------------------
poincare*)

# Create result directory
SRCDIR=${DIRNAME}/src
WKDIR=${DIRNAME}/wk
EXECDIR=${DIRNAME}/build/bin

MAINDIR=$(basename ${DIRNAME})
RESDIR1=${WORK}/${SLLBDIR}/${MAINDIR}
if [ ! -d ${RESDIR1} ]; then
    mkdir -p ${RESDIR1}
    echo " create directory " ${RESDIR1}
fi

RESDIR=${RESDIR1}/${CASE}
if [ ! -d ${RESDIR} ]; then
    mkdir -p ${RESDIR}
    echo " create directory " ${RESDIR}
    ln -s ${RESDIR} ${CASE}
fi

EXECNAME=${EXECDIR}/${MAINDIR}.exe
cp ${EXECNAME} ${RESDIR}
cp ${DATANAME} ${RESDIR} 
cp ${DIRNAME}/meshes/*/*.nml ${RESDIR}

#CMD_MPIRUN="mpirun -ppn=$MPIPROCS -f \$LOADL_HOSTFILE -n \$LOADL_TOTAL_TASKS ${EXECNAME} ${DATANAME} 1>> ${RESDIR}/${MAINDIR}_res.out 2>> ${RESDIR}/${MAINDIR}_res.err"
CMD_MPIRUN="mpirun -machinefile \$LOADL_HOSTFILE -n \$LOADL_TOTAL_TASKS ${EXECNAME} ${DATANAME} 1>> ${RESDIR}/${MAINDIR}_res.out 2>> ${RESDIR}/${MAINDIR}_res.err"
CMD_SUB="llsubmit ${go_file_cmd}"
CMD_SUBRST='wrapper_pbs "'${CMD_SUB}'"'

cat <<EOF > ${go_file_cmd}
# @ job_name = ${JOBNAME}
# @ as_limit = $(awk "BEGIN{printf(\"%.2f\",$NTHREAD*1.75);}")Gb
# @ class = clallmds+
# @ error = \$(job_name).\$(jobid).out
# @ output = \$(job_name).\$(jobid).out
# @ environment = COPY_ALL
# @ wall_clock_limit = ${TIME}
# @ job_type = mpich
# @ restart = no
# @ node = ${NNODES}
# @ total_tasks = ${MPIPROCS}
# @ resources = ConsumableCpus(${NTHREAD})
# @ node_usage = not_shared
# @ queue

#wrapper_pbs() { echo \$1 ; cd ${WKDIR}; \$1; }      

source $HOME/bin/config_intel_selalib.sh

set -vx
cd ${RESDIR}
export OMP_NUM_THREADS=16
${CMD_MPIRUN}
echo " END"
EOF

;;

# CAMU
#-----------------------------------------------------------------
ccamu*)

SRCDIR=${HOMEDIR}/src
WKDIR=${HOMEDIR}/wk
EXECDIR=${HOMEDIR}/build/bin 

# Create result directory
MAINDIR=$(basename $HOMEDIR)
#RESDIR1=/scratch/${USER}/${SLLBDIR}/${MAINDIR}
RESDIR1=${WKDIR}
RESDIR=${RESDIR1}/${CASE}

if [ ! -d ${RESDIR} ]; then
    mkdir -p ${RESDIR}
    echo " create directory " ${RESDIR}
fi

EXECNAME=${EXECDIR}/${MAINDIR}.exe
cp ${EXECNAME} ${RESDIR}
cp ${DATANAME} ${RESDIR} 
#cp domain_patch0.nml ${RESDIR}

CMD_MPIRUN="mpirun -n ${MPIPROCS} ${EXECNAME} ${DATANAME} 1>> ${RESDIR}/${MAINDIR}_res.out 2>> ${RESDIR}/${MAINDIR}_res.err" 
CMD_SUB="oarsub -S ./${go_file_cmd}"
CMD_SUBRST='wrapper_oar "'${CMD_SUB}'"'

cat <<EOF > ${go_file_cmd}
#!/bin/bash
#OAR -n ${JOBNAME}
#OAR -l nodes=${NNODES},walltime=${TIMEH}
#OAR -p cluster
#OAR -O $JOBNAME.%jobid%.out
#OAR -E $JOBNAME.%jobid%.out 

#wrapper_oar() { echo \$1 ; cd ${WKDIR}; \$1; }      

set -vx
cd ${RESDIR}
${CMD_MPIRUN}
echo " END"
EOF

;;

*)
esac

#echo " HOMEDIR " $HOMEDIR
#echo " SLLBDIR " $SLLBDIR
#echo " SRCDIR  " $SRCDIR
#echo " WKDIR   " $WKDIR
#echo " MAINDIR " $MAINDIR
#echo " RESDIR  " $RESDIR
#echo " RESDIR1 " $RESDIR1

# Submit JOB
#-----------------------------------------------------------------
chmod +x ${go_file_cmd}
cd ${WKDIR}
${CMD_SUB}



