# SCons file for the unit test of the collective module
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

vars = Variables()
vars.Add('CPATH', 'dummy path','.')
vars.Add('LPATH', 'dummy path','.')

env = Environment( 
                   variables=vars,
                   F90 = 'mpif90',
                   ENV = os.environ,
                   F90PATH = ['../memory','../precision','../assert',
                              '${CPATH}'],
                   FORTRANMODDIRPREFIX= '-J', 
                   LINK = 'mpif90',
                   LIBPATH= ['.','${LD_LIBRARY_PATH}'],
                   LIBS=['sll_memory','sll_precision','sll_assert'],
                   F90FLAGS = ['-g', '-W', '-Wall', '-DMPIF90', '-DDEBUG', '-ffree-line-length-none'] )
# -std=f2003 Does this work since we are including mpif.h????????

env.Library('sll_memory',["../memory/sll_memory.F90"])
env.Library('sll_precision', ["../precision/sll_working_precision.F90"])
env.Library('sll_assert', ["../assert/sll_assert.F90"])
env.Program('unit_test', ["unit_test.F90", "sll_collective.F90"])
