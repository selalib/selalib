# SCons file for the unit test of the remapping utility
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'Building the remap module...'
print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( F90 = 'mpif90',
                   ENV = os.environ,
                   F90PATH = ['../memory','../precision','../assert',
                   '../collective','../utilities'],
                   FORTRANMODDIRPREFIX= '-J', 
                   LINK = 'mpif90 ',
                   LINKFLAGS = ['-fopenmp'],
                   LIBPATH= ['.'],
                   F90FLAGS = ['-g','-std=f2003','-W', '-Wall', '-DMPIF90', '-DDEBUG', 
                   '-ffree-line-length-none','-fall-intrinsics'],
                   LIBS=['sll_memory','sll_precision','sll_collective',
                         'sll_assertions','sll_utilities'] )


env.Library('sll_memory',["../memory/sll_memory.F90"])
env.Library('sll_precision', ["../precision/sll_working_precision.F90"])
env.Library('sll_assertions', ["../assert/sll_assert.F90"])
env.Library('sll_collective', ["../collective/sll_collective.F90"])
env.Library('sll_utilities', ["../utilities/misc_utils.F90"])
env.Program('unit_test', ["unit_test.F90", "sll_remap.F90"])



