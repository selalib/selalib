! PARAMETERS ARE SET FOR THE FOLLOWING GNUPLOT DIAGNOSTIC
! script to put in ../post_proc/sim2d_gc_polar.gnu
!set term aqua 1 fsize 20
!set logscale y
!set format y "%g"
!set key bottom
!p   'thdiag.dat' u 1:10 w l lw 3,\
!  3.5e-6*exp(0.11335*x) lw 2
!execution:
!ctest --verbose -R sim2d_gc_polar
!or:
!./bin/test_2d_gc_polar ../selalib/prototype/src/simulation/gcsim2d_polar_input
!diagnostic:
!gnuplot -persist ../post_proc/sim2d_gc_polar.gnu


&geometry
  mesh_case="SLL_POLAR_MESH"
  num_cells_x1 = 64
  r_min = 1.
  r_max = 10.
  num_cells_x2 = 32
/

&initial_function
  initial_function_case="SLL_DIOCOTRON"
  r_minus = 4.
  r_plus = 5.
  kmode_x2 = 3.
  eps = 1.e-6
/

&time_iterations
  dt = 0.5
  number_iterations  = 250
  freq_diag = 100
  freq_diag_time = 1
  !time_loop_case = "SLL_EULER"
  time_loop_case = "SLL_PREDICTOR_CORRECTOR" 
/

&advector
  advect2d_case = "SLL_BSL"    
  f_interp2d_case = "SLL_CUBIC_SPLINES"
  phi_interp2d_case = "SLL_CUBIC_SPLINES"
  !charac2d_case = "SLL_EULER"
  charac2d_case = "SLL_VERLET"
  A_interp_case = "SLL_CUBIC_SPLINES"
/
    
&poisson
  poisson_case = "SLL_PHI_FROM_RHO"
  poisson_solver = "SLL_POLAR_FFT"  
  !poisson_solver = "SLL_ELLIPTIC_FINITE_ELEMENT_SOLVER" !use with "SLL_PHI_FROM_RHO"
  !poisson_solver = "SLL_MUDPACK_CURVILINEAR"   !use with "SLL_PHI_FROM_RHO"    
  spline_degree_eta1 = 3
  spline_degree_eta2 = 3    
/
