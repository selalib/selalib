# SCons file for the unit test of the ode solver module
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( ENV = os.environ,
                   F90PATH = ['../memory', '../precision', '../assert',
                              '../constants', '../utilities/', 
                              '../mapped_meshes',
                              '../diagnostics', '../mesh_types','../splines',
                              os.environ['HDF5INCPATH']],
                   FORTRANMODDIRPREFIX= '-J', 
                   LIBPATH= ['.', os.environ['HDF5LIBPATH']],
                   LIBS=['sll_field_2d','sll_splines','sll_memory',
                         'sll_precision','sll_assert',
                         'sll_constants', 'sll_utilities', 'sll_diagnostics',
                         'hdf5_fortran', 'hdf5', 'z'],
                   F90FLAGS = ['-g', '-W', '-Wall', '-std=f2003', '-DDEBUG',
                               '-DGFORTRAN','-ffree-line-length-none'])

env.Library('sll_memory',     ["../memory/sll_memory.F90"])
env.Library('sll_precision',  ["../precision/sll_working_precision.F90"])
env.Library('sll_assert',     ["../assert/sll_assert.F90"])
env.Library('sll_constants',  ["../constants/numeric_constants.F90"])
env.Library('sll_utilities',  ["../utilities/misc_utils.F90"])
env.Library('sll_splines',    ["../splines/sll_splines.F90"])
env.Library('sll_diagnostics',["../diagnostics/sll_diagnostics.F90"])
env.Library('sll_field_2d',   ["../mapped_meshes/sll_maped_mesh_base.F90",
                               "../mapped_meshes/sll_mapped_meshes.F90",
                               "../mesh_types/sll_field_2d.F90",
                               "../mesh_types/geometry_functions.F90"])
#env.Program('unit_test',      ["unit_test.F90", "sll_ode_solvers.F90"])
env.Program('unit_test_implicit_ode_nonuniform',  ["unit_test_implicit_ode_nonuniform.F90", "sll_ode_solvers.F90"])

