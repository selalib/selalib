# SCons file for the unit test of the cylindrical mesh type
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( ENV=os.environ,
                   F90PATH = ['../memory','../precision','../assert',
                              '../utilities','../constants','../mesh_types',
                              '../splines','../diagnostics',
                              os.environ['HDF5INCLUDEPATH']],
                   FORTRANMODDIRPREFIX= '-J', 
                   LIBPATH= ['.', os.environ['LD_LIBRARY_PATH']],
                   LIBS=['sll_memory','sll_precision','sll_assert',
                         'sll_utilities', 'sll_constants','sll_mesh_types',
                         'sll_diagnostics','hdf5_fortran','hdf5','z'],
                   F90FLAGS = ['-g', '-W', '-Wall', '-std=f2003', '-DDEBUG',
                               '-DGFORTRAN','-ffree-line-length-none'])


env.Library('sll_memory',      ["../memory/sll_memory.F90"])
env.Library('sll_precision',   ["../precision/sll_working_precision.F90"])
env.Library('sll_assert',      ["../assert/sll_assert.F90"])
env.Library('sll_constants',   ["../constants/numeric_constants.F90"])
env.Library('sll_utilities',   ["../utilities/misc_utils.F90"])
env.Library('sll_mesh_types',  ["../mesh_types/sll_mesh_types.F90",
                                "../mesh_types/geometry_functions.F90"])
env.Library('sll_diagnostics', ["../diagnostics/sll_diagnostics.F90"])
env.Program('unit_test',       ["unit_test.F90", 
                                "sll_distribution_function.F90"])
