# SCons file for the unit test of the cylindrical mesh type
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( ENV=os.environ,
                   F90PATH = ['../mapped_meshes','../memory','../precision',
                              '../assert',
                              '../utilities','../constants', '../splines',
                              '../low_level_file_io','../fields',
                              os.environ['HDF5INCPATH']],
                   FORTRANMODDIRPREFIX= '-J', 
                   LIBPATH= ['.', os.environ['HDF5LIBPATH']],
                   LIBS=['sll_mapped_meshes','sll_splines', 
                         'sll_field_2d', 'sll_memory',
                         'sll_precision','sll_assert',
                         'sll_utilities', 'sll_constants', 'sll_diagnostics',
                         'hdf5_fortran',
                         'hdf5','z'],
                   F90FLAGS = ['-g', '-W', '-Wall', '-std=f2003', 
                               '-ffree-line-length-none'],
                   CPPDEFINES = ['GFORTRAN','DEBUG'])


env.Library('sll_memory',      ["../memory/sll_memory.F90"])
env.Library('sll_precision',   ["../precision/sll_working_precision.F90"])
env.Library('sll_assert',      ["../assert/sll_assert.F90"])
env.Library('sll_constants',   ["../constants/numeric_constants.F90"])
env.Library('sll_utilities',   ["../utilities/misc_utils.F90"])
env.Library('sll_splines',     ["../splines/sll_splines.F90"])
env.Library('sll_field_2d',    ["../fields/sll_scalar_field_2d.F90",
                                "../fields/geometry_functions.F90"])
env.Library('sll_mapped_meshes',["../mapped_meshes/sll_mapped_mesh_base.F90",
                                 "../mapped_meshes/sll_mapped_meshes.F90"])
env.Library('sll_diagnostics', Glob("../low_level_file_io/sll_*.F90"))
env.Program('unit_test',       ["unit_test.F90", "initial_functions.F90",
                                "sll_distribution_function.F90"])
