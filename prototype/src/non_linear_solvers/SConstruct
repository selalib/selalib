# SCons file for the unit test of Newton-Raphson module
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'Building the Newton-Raphson module...'
print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( ENV=os.environ,
                   F90PATH= ['../memory','../precision','../assert'],
#                  FORTRANMODDIRPREFIX= '-fmod', 
                   LIBPATH= ['.'],
                   LIBS=['sll_memory','sll_precision', 'sll_assertion'],
                   F90FLAGS =['-g', '-W', '-Wall', '-Wextra', '-pedantic', 
                              '-std=f2003', '-ffree-line-length-none', 
                              '-DGFORTRAN -fopenmp'])
#print "GFORTRAN is :", env['GFORTRAN']
#env.Replace(	
#		F90FLAGS = OPT+' -fpp',
#		FORTRANMODDIR = ZZZZZZ
#env.Append(LIBS = ['nsl', 'socket'])

env.Library('sll_memory', ["../memory/sll_memory.F90"])
env.Library('sll_precision', ["../precision/sll_working_precision.F90"])
env.Library('sll_assertion', ["../assert/sll_assert.F90"])
env.Program('unit_test', ["test_jacobian_and_f_module.F90", "unit_test.F90", "newton_raphson.F90"])



