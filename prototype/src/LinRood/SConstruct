# SCons file for the unit test of the LinRood module
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( ENV = os.environ,
                   F90PATH = ['../memory','../precision','../assert',
                              '../utilities','../constants','../mesh_types',
                              '../splines','../ode_solvers', 
                              os.environ['HDF5INCLUDEPATH']],
                   FORTRANMODDIRPREFIX= '-J', 
                   LIBPATH= ['.', os.environ['HDF5LIBPATH']],
                   LIBS=['sll_memory','sll_precision','sll_assert',
                         'sll_utilities', 'sll_constants','sll_field_2d',
                         'sll_interpolators','sll_ode_solvers',
                         'sll_distribution_function','sll_diagnostics',
                         'hdf5_fortran','hdf5','z'],
                   F90FLAGS = ['-g', '-W', '-Wall', '-std=f2003', '-DDEBUG',
                               '-DGFORTRAN','-ffree-line-length-none'])


env.Library('sll_memory',["../memory/sll_memory.F90"])
env.Library('sll_precision', ["../precision/sll_working_precision.F90"])
env.Library('sll_assert', ["../assert/sll_assert.F90"])
env.Library('sll_ode_solvers',["../ode_solvers/sll_ode_solvers.F90"])
#env.Library('sll_tridiagonal', ["../numerical_utilities/tridiagonal.F90"])
env.Library('sll_interpolators', ["../interpolators/sll_interpolators.F90"])
env.Library('sll_constants', ["../constants/numeric_constants.F90"])
env.Library('sll_utilities',["../utilities/misc_utils.F90"])
env.Library('sll_diagnostics',Glob("../diagnostics/sll_*.F90"))
env.Library('sll_field_2d', ["../mesh_types/sll_mesh_test.F90","../mesh_types/sll_field_2d.F90","../mesh_types/geometry_functions.F90"])
env.Library('sll_distribution_function', ["../distribution_function/sll_distribution_function.F90"])
env.Program('unit_test', ["unit_test.F90", "sll_linrood.F90"])
