# SCons file for the unit test of the FFT module
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( ENV = os.environ,
                   F90PATH = ['../memory','../precision','../assert',
                              '../utilities','../constants'],
                   FORTRANMODDIRPREFIX= '-J', 
                   LIBPATH= ['.'],
                   LIBS=['sll_memory','sll_precision','sll_assertion',
                         'sll_misc','sll_constants'],
                   F90FLAGS = ['-g', '-W', '-Wall', '-DTEST_TIME', 
                               '-DDEBUG','-DGFORTRAN',
                               '-ffree-line-length-none'])
#'-std=f2003',
# Reminder: the -DGFORTRAN flag is necessary to make the hash operator work.
# This is important especially when using SLL_ASSERT()
#env.Append(LIBS = ['nsl', 'socket'])

env.Library('sll_memory',    ["../memory/sll_memory.F90"])
env.Library('sll_precision', ["../precision/sll_working_precision.F90"])
env.Library('sll_assertion', ["../assert/sll_assert.F90"])
env.Library('sll_misc',      ["../utilities/misc_utils.F90"])
env.Library('sll_constants', ["../constants/numeric_constants.F90"])
env.Program('unit_test',     ["unit_test.F90", "sll_fft.F90"])



