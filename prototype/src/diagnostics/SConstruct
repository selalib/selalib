# SCons file for the unit test of the diagnostics
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'Building HDF5 module...'
print 'hostname : ' + hostname
print 'platform : ' + platform

#vars = Variables("../conf.py")
#vars.Add('HDF5INCPATH', 'hdf5 header files location','/usr/include')
#vars.Add('HDF5MODPATH', 'fortran module hdf5.mod location','/usr/lib')
#vars.Add('HDF5LIBPATH', 'hdf5 library location','/usr/lib')

env = Environment( #variables = vars,
                   ENV = os.environ, #{'HDF5INCPATH' : os.environ['HDF5INCPATH'],
#                          'HDF5MODPATH' : os.environ['HDF5MODPATH'],
#                          'HDF5LIBPATH' : os.environ['HDF5LIBPATH']},
                   F90FLAGS =['-cpp','-g', '-W', '-Wall', '-Wextra', 
                              '-pedantic', '-std=f2003', 
                              '-ffree-line-length-none'],
                   CPPDEFINES=['GFORTRAN', 'DEBUG'],
                   F90PATH=['../precision','../assert',
                            os.environ['HDF5INCPATH']],
                   LIBPATH=['.', '../assert', '../precision',
                            os.environ['HDF5LIBPATH'] ],
                   LIBS=['sll_precision', 'sll_assertion', 'hdf5_fortran', 
                         'hdf5', 'z'])

#Help(vars.GenerateHelpText(env))

env.Library('sll_precision',  ["../precision/sll_working_precision.F90"])
env.Library('sll_assertion',  ["../assert/sll_assert.F90"])
env.Program('unit_test', ["unit_test.F90","sll_diagnostics.F90",
                          "write_xdmf_xml.c"])

