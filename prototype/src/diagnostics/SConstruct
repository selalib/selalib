# SCons file for the unit test of the diagnostics
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform


# It would be nice if the location of the hdf5.mod module could be set in
# a more general way, like in a catch-all environment variable like CPATH. That 
# was not working so we are using the specific solution of HDF5INCLUDEPATH,
# which is at least portable. But this requires the user to set this
# variable in the environment.

env = Environment( ENV = os.environ,
                   F90FLAGS =['-g', '-W', '-Wall', '-Wextra', '-pedantic', 
                              '-std=f2003', '-ffree-line-length-none'],
                   CPPDEFINES=['GFORTRAN', 'DEBUG'],
                   F90PATH=['../precision','../assert', os.environ['HDF5INCLUDEPATH']],
                   LIBPATH=['.', os.environ['LD_LIBRARY_PATH']],
                   LIBS=[ 'sll_assertion', 'sll_precision', 'hdf5_fortran', 
                          'hdf5','z'])

env.Library('sll_precision',  ["../precision/sll_working_precision.F90"])
env.Library('sll_assertion',  ["../assert/sll_assert.F90"])
env.Program('unit_test', ["unit_test.F90","sll_diagnostics.F90","write_xdmf_xml.c"])

