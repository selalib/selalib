# SCons file for the unit test of the mesh type
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment( ENV=os.environ,
                   F90PATH = ['../memory','../precision','../assert','../utilities','../constants','../diagnostics', os.environ['HDF5INCPATH']],
                   FORTRANMODDIRPREFIX= '-J', 
                   LIBPATH= ['.',os.environ['HDF5LIBPATH']],
                   LIBS=['sll_memory','sll_precision','sll_assert','sll_utilities', 'sll_constants','sll_diagnostics', 'hdf5_fortran','hdf5','z'],
                   F90FLAGS = ['-g', '-W', '-Wall', '-std=f2003', '-DDEBUG','-DGFORTRAN','-ffree-line-length-none'])

#print 'CFLAGS: ' + CPATH
env.Library('sll_memory',["../memory/sll_memory.F90"])
env.Library('sll_precision', ["../precision/sll_working_precision.F90"])
env.Library('sll_assert', ["../assert/sll_assert.F90"])
env.Library('sll_utilities',["../utilities/misc_utils.F90"])
env.Library('sll_constants', ["../constants/numeric_constants.F90"])
env.Library('sll_diagnostics', ["../diagnostics/sll_diagnostics.F90"])
env.Program('sll_mesh_types', ["sll_mesh_types.F90","unit_test.F90","geometry_functions.F90"])
