# SCons file for the unit test of the cylindrical mesh type
import os
import socket
import distutils.util

platform = distutils.util.get_platform()
hostname = socket.gethostname() 

print 'hostname : ' + hostname
print 'platform : ' + platform

env = Environment(F90PATH = ['../memory','../precision','../assert','../utilities','../constants'],
                  FORTRANMODDIRPREFIX= '-J', 
                  LIBPATH= ['.'],
                  LIBS=['sll_memory','sll_precision','sll_assert','sll_utilities', 'sll_constants'],
                  F90FLAGS = ['-g', '-W', '-Wall', '-Werror', '-std=f95', '-DDEBUG','-DGFORTRAN','-ffree-line-length-none'])

#env.Replace(	
#		F90FLAGS = OPT+' -fpp',
#		FORTRANMODDIR = ZZZZZZ
#env.Append(LIBS = ['nsl', 'socket'])

env.Library('sll_memory',["../memory/sll_memory.F90"])
env.Library('sll_precision', ["../precision/sll_working_precision.F90"])
env.Library('sll_assert', ["../assert/sll_assert.F90"])
env.Library('sll_utilities',["../utilities/misc_utils.F90"])
env.Library('sll_constants', ["../constants/numeric_constants.F90"])
env.Program('unit_test', ["unit_test.F90", "mesh_types.F90"])
